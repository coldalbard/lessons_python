# Задача №31. Решение в группах
# Последовательностью Фибоначчи называется
# последовательность чисел a0
# , a1
# , ..., an
# , ..., где
# a0
#  = 0, a1
#  = 1, ak
#  = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию


# Задача №33. Общее обсуждение
# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1

# def make_journal(n):
#     journal = [int(input()) for i in range(n)]
#     return journal
#
# n = int(input())
#
# def swap_mark(lst):
#     max1 = max(lst)
#     min1 = min(lst)
#     for i in range(len(lst)):
#         if lst[i] == max1:
#             lst[i] = min1
#     return lst
#
#
# print(swap_mark(make_journal(n)))


# Задача №31. Решение в группах
# Последовательностью Фибоначчи называется
# последовательность чисел a0
# , a1
# , ..., an
# , ..., где
# a0
#  = 0, a1
#  = 1, ak
#  = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию

# 1 решение

# n = int(input())
# a = 1
# y = 0
# for i in range(1, n + 1):
#     b = a
#     a = b + y
#     y = b
#     print(b, end=" ")

# 2 решение
# n = int(input())
#
# def fib(n):
#     if n in [1, 2]:
#         return 1
#     return fib(n - 1) + fib(n - 2)
# print(fib(n))


# 3 решение
# def fibb(n):
#     if n == 0 or n == 1:
#         return n
#     return fibb(n - 1) + fibb(n - 2)
#
# n = int(input())
# print(fibb(n))

# Задача №35. Решение в группах
# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes


# 1 решение

# n = int(input("Введите число"))
# def Number(n):
#     if n % n == 0 and n % 1 == 0 and n % 2 != 0 and n % 3 != 0:
#         print("yes")
#     else:
#         print("no")
# Number(n)

# 2 решение
# n = int(input())
# def N(n):
#     count = "no"
#     for i in range(2, n + 1):
#         if n == 1:
#             count = "yes"
#         if n % i == 0 and n % 2 != 0 and n % 3 != 0:
#             count = "yes"
#             return count
#     return count
# print(N(n))

# 3 решение
# def check_simple(n):
#     for i in range(2, n):
#         if n % i == 0:
#             return 0
#         return "yes"
# n = int(input())
# print(check_simple(n))



# Задача №37. Решение в группах
# 15 минут
# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3

# N = int(input())
# def Next(N):
#     text = ""
#     if 3 != len(text):
#         text += str((N + 1))
#     print(text)
# print(Next(N))


# n = int(input("Введите число N: "))
# def rec(x):
#     if x == 0:
#         return 0
#     else:
#         print(x, end=" ")
#         rec(x-1)
# rec (n)



# def reverse_psl(n):
#     if n==0:
#         return ""
#     k = int(input())
#     return reverse_psl(n-1) + f" {k}"
# n = int(input())
# print(reverse_psl(n))


# def foo(n):
#     elem = int(input('Введите число: '))
#     if n != 1:
#         foo(n-1)
#     print(elem, end=' ')
# n = int(input('Введите размер списка: '))
# foo(n)




# Задача 26: Напишите программу, которая на вход принимает
# два числа A и B, и возводит число А в целую степень B с
# помощью рекурсии.
# A = 3; B = 5 -> 243 (3⁵)
# A = 2; B = 3 -> 8
# a = int(input())
# b = int(input())
# def St(a, b):
#     if b > 0:
#         return St(a * a, b - 1)
#     else:
#         return a
# print(St(a, b))



# *доп. Задана натуральная степень k.
# Сформировать случайным образом список коэффициентов
# (значения от 0 до 100) многочлена и вывести его в терминал.
# *Пример:*
# - k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0
# значение выражения можно записать в виде:
# 2*x^2+5=0
# (если коэффициент равен 0 - значение не пишется,)


# Напишите программу, которая вычисляет количество чисел,
# состоящих из K цифр, для которых сумма цифр равна N ,
# напечатать сами эти числа